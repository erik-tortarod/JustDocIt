name: Generate Documentation - Random change

on:
   push:
      branches:
         - dev
         - main
      paths:
         - "frontend/src/**"
         - "frontend/package.json"
         - "frontend/package-lock.json"
   workflow_dispatch:
      inputs:
         branch:
            description: "Rama donde generar la documentaci칩n"
            required: true
            default: "dev"
            type: choice
            options:
               - dev
               - main

jobs:
   generate-docs:
      runs-on: ubuntu-latest
      defaults:
         run:
            working-directory: frontend/

      steps:
         - name: Checkout repository
           uses: actions/checkout@v4
           with:
              ref: ${{ github.event_name == 'workflow_dispatch' && inputs.branch || github.ref }}

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: "22"
              cache: "npm"
              cache-dependency-path: frontend/package-lock.json

         - name: Install dependencies
           run: npm install

         - name: Generate documentation
           run: |
              npx typedoc --entryPointStrategy Expand src --skipErrorChecking

         - name: Check for changes
           id: changes
           run: |
              git diff --quiet || echo "has_changes=true" >> $GITHUB_OUTPUT

         - name: Commit and push if changes
           if: steps.changes.outputs.has_changes == 'true'
           run: |
              git config --local user.email "github-actions[bot]@users.noreply.github.com"
              git config --local user.name "github-actions[bot]"
              git add docs/
              git commit -m "docs: update documentation"
              git pull --rebase origin ${{ github.ref_name }}
              git push origin ${{ github.ref_name }}

         - name: Comment PR
           if: github.event_name == 'pull_request'
           uses: actions/github-script@v7
           with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              script: |
                 const comment = `
                 游닄 **Documentation Update**

                 La documentaci칩n ha sido generada y actualizada autom치ticamente.

                 Puedes ver la documentaci칩n generada en la carpeta \`docs/\` del repositorio.
                 `;

                 github.rest.issues.createComment({
                   issue_number: context.issue.number,
                   owner: context.repo.owner,
                   repo: context.repo.repo,
                   body: comment
                 });
