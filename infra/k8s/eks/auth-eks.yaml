---
apiVersion: v1
kind: Namespace
metadata:
  name: my-app
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: my-app
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: cm9vdHVzZXI= # rootuser
  MONGO_INITDB_ROOT_PASSWORD: cm9vdHBhc3M= # rootpass
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: my-app
type: Opaque
data:
  # Estos valores están codificados en base64
  SPRING_SECURITY_USER_PASSWORD: cGFzc3dvcmQ= # password
  GITHUB_CLIENT_ID: T3YyM2xpemR1dEVJTXR0dnQ5ZWs= # Ov23lizdutEIMttvt9ek
  GITHUB_CLIENT_SECRET: Mzg1NWQ0YTRjZGUyMjVlOTIzZTkwYTk4YjAwMGNhYjM2NDhmZThhNw== # 3855d4a4cde225e923e90a98b000cab3648fe8a7
  ENCRYPTION_SECRET: bWlfY2xhdmVfc2VjcmV0YV9tdXlfc2VndXJhX21pbmltb18xNl9jYXJhY3RlcmVz # mi_clave_secreta_muy_segura_minimo_16_caracteres
  JWT_SECRET_KEY1: bXlfc3VwZXJfc2VjdXJlX3NlY3JldF9rZXlfMTIzNDU2Nzg5MA== # my_super_secure_secret_key_1234567890
  JWT_SECRET_KEY2: YW5vdGhlcl9zZWN1cmVfc2VjcmV0X2tleV8xMjM0NTY3ODkw # another_secure_secret_key_1234567890
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: eriktortarod/docker-auth:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_APPLICATION_NAME
              value: auth
            # Configuración de seguridad básica
            - name: SPRING_SECURITY_USER_NAME
              value: user
            - name: SPRING_SECURITY_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SPRING_SECURITY_USER_PASSWORD
            # Configuración OAuth GitHub
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: GITHUB_CLIENT_ID
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: GITHUB_CLIENT_SECRET
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_SCOPE
              value: "read:user,user:email,repo"
            # Configuración MongoDB
            - name: SPRING_DATA_MONGODB_HOST
              value: mongodb
            - name: SPRING_DATA_MONGODB_PORT
              value: "27017"
            - name: SPRING_DATA_MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: SPRING_DATA_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: SPRING_DATA_MONGODB_DATABASE
              value: justdocit
            - name: SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE
              value: admin
            - name: SPRING_DATA_MONGODB_AUTO_INDEX_CREATION
              value: "true"
            # Claves de encriptación y JWT
            - name: ENCRYPTION_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ENCRYPTION_SECRET
            - name: JWT_SECRET_KEY1
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET_KEY1
            - name: JWT_SECRET_KEY2
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET_KEY2
            # URL del frontend - adaptada para EKS
            - name: FRONTEND_URL
              value: "http://frontend.my-app.svc.cluster.local"
            # Docker flag
            - name: IS_DOCKER
              value: "true"
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "400m"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: my-app
spec:
  selector:
    app: auth
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer